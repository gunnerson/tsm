# Generated by Django 3.2.6 on 2021-08-18 21:00

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Trailer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fleet_number', models.CharField(max_length=8, null=True)),
                ('vin', models.CharField(blank=True, max_length=17)),
                ('year', models.PositiveSmallIntegerField(blank=True, choices=[(1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022)], null=True)),
                ('make', models.CharField(blank=True, choices=[('HY', 'Hyundai'), ('UT', 'Utility'), ('WB', 'Wabash')], max_length=2)),
                ('status', models.CharField(blank=True, choices=[('DL', 'Trip'), ('ID', 'Idle'), ('SH', 'Shop'), ('IA', 'Term')], default='ID', max_length=2)),
                ('license_plate', models.CharField(blank=True, max_length=8)),
                ('value', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('insurance', models.DateField(blank=True, null=True)),
                ('registration', models.DateField(blank=True, null=True)),
                ('inspection', models.DateField(blank=True, null=True)),
                ('gps', models.BooleanField(default=False, verbose_name='GPS')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Started')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Terminated')),
            ],
        ),
        migrations.CreateModel(
            name='Truck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fleet_number', models.CharField(max_length=8, null=True, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z]*$', 'Only alphanumeric characters are allowed.')])),
                ('vin', models.CharField(blank=True, max_length=17, null=True, verbose_name='VIN')),
                ('year', models.PositiveSmallIntegerField(blank=True, choices=[(1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022)], null=True)),
                ('make', models.CharField(blank=True, choices=[('FL', 'Freighliner'), ('IN', 'International'), ('KW', 'Kenworth'), ('PB', 'Peterbilt'), ('VL', 'Volvo'), ('WS', 'Western Star')], max_length=2)),
                ('license_plate', models.CharField(blank=True, max_length=8, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z]*$', 'Only alphanumeric characters are allowed.')])),
                ('state', models.CharField(blank=True, choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AS', 'American Samoa'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('DC', 'District of Columbia'), ('FL', 'Florida'), ('GA', 'Georgia'), ('GU', 'Guam'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('MP', 'Northern Mariana Islands'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('PR', 'Puerto Rico'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VI', 'Virgin Islands'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming')], max_length=2)),
                ('status', models.CharField(choices=[('DL', 'Trip'), ('ID', 'Idle'), ('SH', 'Shop'), ('IA', 'Term')], default='ID', max_length=2)),
                ('mileage', models.PositiveIntegerField(blank=True, null=True)),
                ('insurance', models.DateField(blank=True, null=True)),
                ('value', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('engine', models.CharField(blank=True, choices=[('CT', 'Caterpillar'), ('CM', 'Cummins'), ('DT', 'Detroit'), ('IN', 'International'), ('PC', 'Paccar'), ('VL', 'Volvo')], max_length=2)),
                ('engine_number', models.CharField(blank=True, max_length=13, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z]*$', 'Only alphanumeric characters are allowed.')])),
                ('registration', models.DateField(blank=True, null=True)),
                ('inspection', models.DateField(blank=True, null=True)),
                ('gps', models.BooleanField(default=False, verbose_name='GPS')),
                ('prepass', models.PositiveIntegerField(blank=True, null=True, verbose_name='PrePass')),
                ('ipass', models.CharField(blank=True, max_length=14, null=True, verbose_name='I-Pass')),
                ('ifta', models.CharField(blank=True, max_length=12, null=True, verbose_name='IFTA')),
                ('ny_permit', models.CharField(blank=True, max_length=6, null=True, verbose_name='NY')),
                ('ky_permit', models.BooleanField(default=False, verbose_name='KY')),
                ('nm_permit', models.BooleanField(default=False, verbose_name='NM')),
                ('or_permit', models.BooleanField(default=False, verbose_name='OR')),
                ('eld', models.CharField(blank=True, max_length=18, null=True, verbose_name='ELD')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Started')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Terminated')),
            ],
        ),
    ]
